{
  "contractName": "Accounts",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "viewAccountRole",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "viewAccountName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "viewTest",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"viewAccountName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"viewAccountRole\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewTest\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Accounts.sol\":\"Accounts\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Accounts.sol\":{\"keccak256\":\"0xd595f6da3a4d6d0959c981d4aa3a3ba2c288053d9116c2eb3f1a77f0bd8468d7\",\"urls\":[\"bzz-raw://3109e27a658eb2608bf02d0d3572f90cfb83620d40cb161f090eba16b72ac911\",\"dweb:/ipfs/QmbXiA4YuC3pAoNFcdnrqo5Y8X8iK27D8fyDkMqC5t1Akq\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000f0238038062000f02833981810160405281019062000037919062000984565b60405180604001604052806040518060400160405280600681526020017f447269766572000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600981526020017f436f6d70616e792041000000000000000000000000000000000000000000000081525081525060008083600081518110620000d057620000cf620009d5565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019062000130929190620006e6565b5060208201518160010190805190602001906200014f929190620006e6565b5090505060405180604001604052806040518060400160405280601081526020017f506172746e65722f496e766573746f720000000000000000000000000000000081525081526020016040518060400160405280600981526020017f436f6d70616e792042000000000000000000000000000000000000000000000081525081525060008083600181518110620001ec57620001eb620009d5565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906200024c929190620006e6565b5060208201518160010190805190602001906200026b929190620006e6565b5090505060405180604001604052806040518060400160405280601081526020017f506172746e65722f496e766573746f720000000000000000000000000000000081525081526020016040518060400160405280600981526020017f436f6d70616e792043000000000000000000000000000000000000000000000081525081525060008083600281518110620003085762000307620009d5565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019062000368929190620006e6565b50602082015181600101908051906020019062000387929190620006e6565b5090505060405180604001604052806040518060400160405280600781526020017f506172746e65720000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600981526020017f436f6d70616e792044000000000000000000000000000000000000000000000081525081525060008083600381518110620004245762000423620009d5565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019062000484929190620006e6565b506020820151816001019080519060200190620004a3929190620006e6565b5090505060405180604001604052806040518060400160405280600d81526020017f506c6174666f726d20557365720000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f56616c65726965000000000000000000000000000000000000000000000000008152508152506000808360048151811062000540576200053f620009d5565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190620005a0929190620006e6565b506020820151816001019080519060200190620005bf929190620006e6565b5090505060405180604001604052806040518060400160405280600d81526020017f506c6174666f726d20557365720000000000000000000000000000000000000081525081526020016040518060400160405280600881526020017f57656e2051696e67000000000000000000000000000000000000000000000000815250815250600080836005815181106200065c576200065b620009d5565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190620006bc929190620006e6565b506020820151816001019080519060200190620006db929190620006e6565b509050505062000a69565b828054620006f49062000a33565b90600052602060002090601f01602090048101928262000718576000855562000764565b82601f106200073357805160ff191683800117855562000764565b8280016001018555821562000764579182015b828111156200076357825182559160200191906001019062000746565b5b50905062000773919062000777565b5090565b5b808211156200079257600081600090555060010162000778565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620007fa82620007af565b810181811067ffffffffffffffff821117156200081c576200081b620007c0565b5b80604052505050565b60006200083162000796565b90506200083f8282620007ef565b919050565b600067ffffffffffffffff821115620008625762000861620007c0565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620008a58262000878565b9050919050565b620008b78162000898565b8114620008c357600080fd5b50565b600081519050620008d781620008ac565b92915050565b6000620008f4620008ee8462000844565b62000825565b905080838252602082019050602084028301858111156200091a576200091962000873565b5b835b81811015620009475780620009328882620008c6565b8452602084019350506020810190506200091c565b5050509392505050565b600082601f830112620009695762000968620007aa565b5b81516200097b848260208601620008dd565b91505092915050565b6000602082840312156200099d576200099c620007a0565b5b600082015167ffffffffffffffff811115620009be57620009bd620007a5565b5b620009cc8482850162000951565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000a4c57607f821691505b6020821081141562000a635762000a6262000a04565b5b50919050565b6104898062000a796000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630109b8c6146100465780635e2131b0146100765780636c9e7c4314610094575b600080fd5b610060600480360381019061005b919061030a565b6100c4565b60405161006d91906103d0565b60405180910390f35b61007e610197565b60405161008b91906103d0565b60405180910390f35b6100ae60048036038101906100a9919061030a565b6101d4565b6040516100bb91906103d0565b60405180910390f35b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805461011290610421565b80601f016020809104026020016040519081016040528092919081815260200182805461013e90610421565b801561018b5780601f106101605761010080835404028352916020019161018b565b820191906000526020600020905b81548152906001019060200180831161016e57829003601f168201915b50505050509050919050565b60606040518060400160405280600281526020017f6869000000000000000000000000000000000000000000000000000000000000815250905090565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461022290610421565b80601f016020809104026020016040519081016040528092919081815260200182805461024e90610421565b801561029b5780601f106102705761010080835404028352916020019161029b565b820191906000526020600020905b81548152906001019060200180831161027e57829003601f168201915b50505050509050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102d7826102ac565b9050919050565b6102e7816102cc565b81146102f257600080fd5b50565b600081359050610304816102de565b92915050565b6000602082840312156103205761031f6102a7565b5b600061032e848285016102f5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610371578082015181840152602081019050610356565b83811115610380576000848401525b50505050565b6000601f19601f8301169050919050565b60006103a282610337565b6103ac8185610342565b93506103bc818560208601610353565b6103c581610386565b840191505092915050565b600060208201905081810360008301526103ea8184610397565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061043957607f821691505b6020821081141561044d5761044c6103f2565b5b5091905056fea26469706673582212202ecf63e73f372afcc6fd8edaa19fc895d7308761e3a606022bcaa88f5a5f696064736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80630109b8c6146100465780635e2131b0146100765780636c9e7c4314610094575b600080fd5b610060600480360381019061005b919061030a565b6100c4565b60405161006d91906103d0565b60405180910390f35b61007e610197565b60405161008b91906103d0565b60405180910390f35b6100ae60048036038101906100a9919061030a565b6101d4565b6040516100bb91906103d0565b60405180910390f35b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805461011290610421565b80601f016020809104026020016040519081016040528092919081815260200182805461013e90610421565b801561018b5780601f106101605761010080835404028352916020019161018b565b820191906000526020600020905b81548152906001019060200180831161016e57829003601f168201915b50505050509050919050565b60606040518060400160405280600281526020017f6869000000000000000000000000000000000000000000000000000000000000815250905090565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461022290610421565b80601f016020809104026020016040519081016040528092919081815260200182805461024e90610421565b801561029b5780601f106102705761010080835404028352916020019161029b565b820191906000526020600020905b81548152906001019060200180831161027e57829003601f168201915b50505050509050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102d7826102ac565b9050919050565b6102e7816102cc565b81146102f257600080fd5b50565b600081359050610304816102de565b92915050565b6000602082840312156103205761031f6102a7565b5b600061032e848285016102f5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610371578082015181840152602081019050610356565b83811115610380576000848401525b50505050565b6000601f19601f8301169050919050565b60006103a282610337565b6103ac8185610342565b93506103bc818560208601610353565b6103c581610386565b840191505092915050565b600060208201905081810360008301526103ea8184610397565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061043957607f821691505b6020821081141561044d5761044c6103f2565b5b5091905056fea26469706673582212202ecf63e73f372afcc6fd8edaa19fc895d7308761e3a606022bcaa88f5a5f696064736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4542:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:10",
                "type": ""
              }
            ],
            "src": "7:75:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:10"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:10"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "423:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "440:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "443:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "433:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "433:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "433:12:10"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "334:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "505:54:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "515:38:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "533:5:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "540:2:10",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "529:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "529:14:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "549:2:10",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "545:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "545:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "525:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:28:10"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "515:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "488:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "498:6:10",
                "type": ""
              }
            ],
            "src": "457:102:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "593:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "610:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "613:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "603:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "603:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "603:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "707:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "710:4:10",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "700:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "700:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "700:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "731:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "734:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "724:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "724:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "724:15:10"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "565:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "794:238:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "804:58:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "826:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "856:4:10"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "834:21:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "834:27:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "822:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "822:40:10"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "808:10:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "973:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "975:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "975:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "916:10:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "928:18:10",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "913:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "913:34:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "952:10:10"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "964:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "949:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:22:10"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "910:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:62:10"
                  },
                  "nodeType": "YulIf",
                  "src": "907:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1011:2:10",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1015:10:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1004:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1004:22:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1004:22:10"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "780:6:10",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "788:4:10",
                "type": ""
              }
            ],
            "src": "751:281:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1079:88:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1089:30:10",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "1099:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1099:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1089:6:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1148:6:10"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1156:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "1128:19:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1128:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1128:33:10"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1063:4:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1072:6:10",
                "type": ""
              }
            ],
            "src": "1038:129:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1255:229:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1360:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1362:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1362:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1362:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1332:6:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1340:18:10",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1329:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1329:30:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1326:56:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1392:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1404:6:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1412:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "1400:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1400:17:10"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1392:4:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1454:23:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1466:4:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1472:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1462:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1462:15:10"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1454:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1239:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1250:4:10",
                "type": ""
              }
            ],
            "src": "1173:311:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1579:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1596:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1599:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1589:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1589:12:10"
                }
              ]
            },
            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
            "nodeType": "YulFunctionDefinition",
            "src": "1490:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1658:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1668:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1683:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1690:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1679:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1679:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1668:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1640:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1650:7:10",
                "type": ""
              }
            ],
            "src": "1613:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1790:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1800:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1829:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1811:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1811:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1800:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1772:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1782:7:10",
                "type": ""
              }
            ],
            "src": "1745:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1890:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1947:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1956:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1959:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1949:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1949:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1949:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1913:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1938:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1920:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1920:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1910:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1910:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1903:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1903:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1900:63:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1883:5:10",
                "type": ""
              }
            ],
            "src": "1847:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2038:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2048:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2063:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2057:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2057:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2048:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2106:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2079:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2079:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2079:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2016:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2024:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2032:5:10",
                "type": ""
              }
            ],
            "src": "1975:143:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2254:619:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2264:90:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2346:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2289:56:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2289:64:10"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2273:15:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2273:81:10"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2264:5:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2363:16:10",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "2374:5:10"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "2367:3:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2396:5:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2403:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2389:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2389:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2389:21:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2419:23:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2430:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2437:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2426:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2426:16:10"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "2419:3:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2452:44:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2470:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2482:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2490:4:10",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "2478:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2478:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2466:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:30:10"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "2456:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2524:103:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                            "nodeType": "YulIdentifier",
                            "src": "2538:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2538:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2538:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2511:6:10"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2519:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2508:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2508:15:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2505:122:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2712:155:10",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2727:21:10",
                        "value": {
                          "name": "src",
                          "nodeType": "YulIdentifier",
                          "src": "2745:3:10"
                        },
                        "variables": [
                          {
                            "name": "elementPos",
                            "nodeType": "YulTypedName",
                            "src": "2731:10:10",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "2769:3:10"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "elementPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2806:10:10"
                                },
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2818:3:10"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "2774:31:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2774:48:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2762:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2762:61:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2762:61:10"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2836:21:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "2847:3:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2852:4:10",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2843:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2843:14:10"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "2836:3:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2665:3:10"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2670:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2662:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2662:15:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2678:25:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2680:21:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "2691:3:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2696:4:10",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2687:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2687:14:10"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2680:3:10"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2640:21:10",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2642:17:10",
                        "value": {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "2653:6:10"
                        },
                        "variables": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "2646:3:10",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "2636:231:10"
                }
              ]
            },
            "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2224:6:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2232:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2240:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2248:5:10",
                "type": ""
              }
            ],
            "src": "2141:732:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2984:297:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3033:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "3035:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3035:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3035:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3012:6:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3020:4:10",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3008:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3008:17:10"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3027:3:10"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3004:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3004:27:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2997:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2997:35:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2994:122:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3125:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3145:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3139:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3139:13:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3129:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3161:114:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3248:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3256:4:10",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3244:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3244:17:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3263:6:10"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3271:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "3170:73:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3170:105:10"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3161:5:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2962:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2970:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2978:5:10",
                "type": ""
              }
            ],
            "src": "2896:385:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3389:452:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3435:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3437:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3437:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3437:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3410:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3419:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3406:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3406:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3431:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3402:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3402:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3399:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3528:306:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3543:38:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3567:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3578:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3563:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3563:17:10"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3557:5:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3557:24:10"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3547:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3628:83:10",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "3630:77:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3630:79:10"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3630:79:10"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3600:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3608:18:10",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3597:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3597:30:10"
                      },
                      "nodeType": "YulIf",
                      "src": "3594:117:10"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3725:99:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3796:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3807:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3792:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3792:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3816:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3735:56:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3735:89:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3725:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3359:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3370:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3382:6:10",
                "type": ""
              }
            ],
            "src": "3287:554:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3875:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3892:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3895:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3885:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3885:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3885:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3989:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3992:4:10",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3982:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3982:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3982:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4013:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4016:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4006:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4006:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4006:15:10"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "3847:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4061:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4078:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4081:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4071:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4071:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4071:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4175:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4178:4:10",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4168:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4168:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4168:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4199:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4202:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4192:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4192:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4192:15:10"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "4033:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4270:269:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4280:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4294:4:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4300:1:10",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4290:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4290:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4280:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4311:38:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4341:4:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4347:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4337:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4337:12:10"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "4315:18:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4388:51:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4402:27:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "4416:6:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4424:4:10",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "4412:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4412:17:10"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4402:6:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4368:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4361:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4361:26:10"
                  },
                  "nodeType": "YulIf",
                  "src": "4358:81:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4491:42:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "4505:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4505:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4505:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4455:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4478:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4486:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4475:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4475:14:10"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "4452:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4452:38:10"
                  },
                  "nodeType": "YulIf",
                  "src": "4449:84:10"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4254:4:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4263:6:10",
                "type": ""
              }
            ],
            "src": "4219:320:10"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3075:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:10",
                "type": ""
              }
            ],
            "src": "7:75:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:10"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:10"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:10",
                "type": ""
              }
            ],
            "src": "334:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:10",
                "type": ""
              }
            ],
            "src": "466:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:10",
                "type": ""
              }
            ],
            "src": "568:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:10",
                "type": ""
              }
            ],
            "src": "696:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:10",
                "type": ""
              }
            ],
            "src": "841:329:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1235:40:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1246:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1262:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1256:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1246:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1218:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1228:6:10",
                "type": ""
              }
            ],
            "src": "1176:99:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1377:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1394:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1399:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1387:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1387:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1415:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1434:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1439:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1430:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1430:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1415:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1349:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1354:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1365:11:10",
                "type": ""
              }
            ],
            "src": "1281:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1505:258:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1515:10:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1524:1:10",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1519:1:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1584:63:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1609:3:10"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1614:1:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1605:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1605:11:10"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "1628:3:10"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1633:1:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1624:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1624:11:10"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1618:5:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1618:18:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1598:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1598:39:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1598:39:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1545:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1548:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1542:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:13:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1556:19:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1558:15:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1567:1:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1570:2:10",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1563:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1563:10:10"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1558:1:10"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1538:3:10",
                    "statements": []
                  },
                  "src": "1534:113:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1681:76:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1731:3:10"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1736:6:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1727:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1727:16:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1745:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1720:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1720:27:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1720:27:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1662:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1665:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1659:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1659:13:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1656:101:10"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1487:3:10",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1492:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1497:6:10",
                "type": ""
              }
            ],
            "src": "1456:307:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1817:54:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1827:38:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1845:5:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1852:2:10",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1841:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1841:14:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1861:2:10",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1857:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1857:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1837:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1837:28:10"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1827:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1800:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "1810:6:10",
                "type": ""
              }
            ],
            "src": "1769:102:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1969:272:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1979:53:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2026:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1993:32:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1993:39:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1983:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2041:78:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2107:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2112:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2048:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2048:71:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2041:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2154:5:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2161:4:10",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2150:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2150:16:10"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2168:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2173:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2128:21:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2128:52:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2128:52:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2189:46:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2200:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2227:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2205:21:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2205:29:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2196:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2196:39:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2189:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1950:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1957:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1965:3:10",
                "type": ""
              }
            ],
            "src": "1877:364:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2365:195:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2375:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2387:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2398:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2383:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2383:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2375:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2422:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2433:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2418:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2418:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2441:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2447:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2437:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2437:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2411:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2411:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2411:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2467:86:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2539:6:10"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2548:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2475:63:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2475:78:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2467:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2337:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2349:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2360:4:10",
                "type": ""
              }
            ],
            "src": "2247:313:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2594:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2611:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2614:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2604:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2604:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2604:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2708:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2711:4:10",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2701:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2701:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2701:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2732:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2735:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2725:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2725:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2725:15:10"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "2566:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2803:269:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2813:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2827:4:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2833:1:10",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2823:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2823:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2813:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2844:38:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2874:4:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2880:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2870:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2870:12:10"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2848:18:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2921:51:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2935:27:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2949:6:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2957:4:10",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2945:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2945:17:10"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2935:6:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2901:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2894:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2894:26:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2891:81:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3024:42:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "3038:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3038:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3038:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2988:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3011:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3019:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3008:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3008:14:10"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2985:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2985:38:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2982:84:10"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2787:4:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2796:6:10",
                "type": ""
              }
            ],
            "src": "2752:320:10"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "27:1193:5:-:0;;;288:504;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;387:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;361:8;:23;370:10;381:1;370:13;;;;;;;;:::i;:::-;;;;;;;;361:23;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;454:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;428:8;:23;437:10;448:1;437:13;;;;;;;;:::i;:::-;;;;;;;;428:23;;;;;;;;;;;;;;;:66;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;531:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;505:8;:23;514:10;525:1;514:13;;;;;;;;:::i;:::-;;;;;;;;505:23;;;;;;;;;;;;;;;:66;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;608:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;582:8;:23;591:10;602:1;591:13;;;;;;;;:::i;:::-;;;;;;;;582:23;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;676:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:8;:23;659:10;670:1;659:13;;;;;;;;:::i;:::-;;;;;;;;650:23;;;;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;748:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;722:8;:23;731:10;742:1;731:13;;;;;;;;:::i;:::-;;;;;;;;722:23;;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;288:504;27:1193;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:143::-;2032:5;2063:6;2057:13;2048:22;;2079:33;2106:5;2079:33;:::i;:::-;1975:143;;;;:::o;2141:732::-;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:554::-;3382:6;3431:2;3419:9;3410:7;3406:23;3402:32;3399:119;;;3437:79;;:::i;:::-;3399:119;3578:1;3567:9;3563:17;3557:24;3608:18;3600:6;3597:30;3594:117;;;3630:79;;:::i;:::-;3594:117;3735:89;3816:7;3807:6;3796:9;3792:22;3735:89;:::i;:::-;3725:99;;3528:306;3287:554;;;;:::o;3847:180::-;3895:77;3892:1;3885:88;3992:4;3989:1;3982:15;4016:4;4013:1;4006:15;4033:180;4081:77;4078:1;4071:88;4178:4;4175:1;4168:15;4202:4;4199:1;4192:15;4219:320;4263:6;4300:1;4294:4;4290:12;4280:22;;4347:1;4341:4;4337:12;4368:18;4358:81;;4424:4;4416:6;4412:17;4402:27;;4358:81;4486:2;4478:6;4475:14;4455:18;4452:38;4449:84;;;4505:18;;:::i;:::-;4449:84;4270:269;4219:320;;;:::o;27:1193:5:-;;;;;;;",
  "deployedSourceMap": "27:1193:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1131:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;800:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;962:161;1050:13;1088:8;:15;1097:5;1088:15;;;;;;;;;;;;;;;:27;;1081:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:161;;;:::o;1131:86::-;1172:13;1198:11;;;;;;;;;;;;;;;;;;;1131:86;:::o;800:154::-;888:13;926:8;:15;935:5;926:15;;;;;;;;;;;;;;;:20;;919:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:154;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:99::-;1228:6;1262:5;1256:12;1246:22;;1176:99;;;:::o;1281:169::-;1365:11;1399:6;1394:3;1387:19;1439:4;1434:3;1430:14;1415:29;;1281:169;;;;:::o;1456:307::-;1524:1;1534:113;1548:6;1545:1;1542:13;1534:113;;;1633:1;1628:3;1624:11;1618:18;1614:1;1609:3;1605:11;1598:39;1570:2;1567:1;1563:10;1558:15;;1534:113;;;1665:6;1662:1;1659:13;1656:101;;;1745:1;1736:6;1731:3;1727:16;1720:27;1656:101;1505:258;1456:307;;;:::o;1769:102::-;1810:6;1861:2;1857:7;1852:2;1845:5;1841:14;1837:28;1827:38;;1769:102;;;:::o;1877:364::-;1965:3;1993:39;2026:5;1993:39;:::i;:::-;2048:71;2112:6;2107:3;2048:71;:::i;:::-;2041:78;;2128:52;2173:6;2168:3;2161:4;2154:5;2150:16;2128:52;:::i;:::-;2205:29;2227:6;2205:29;:::i;:::-;2200:3;2196:39;2189:46;;1969:272;1877:364;;;;:::o;2247:313::-;2360:4;2398:2;2387:9;2383:18;2375:26;;2447:9;2441:4;2437:20;2433:1;2422:9;2418:17;2411:47;2475:78;2548:4;2539:6;2475:78;:::i;:::-;2467:86;;2247:313;;;;:::o;2566:180::-;2614:77;2611:1;2604:88;2711:4;2708:1;2701:15;2735:4;2732:1;2725:15;2752:320;2796:6;2833:1;2827:4;2823:12;2813:22;;2880:1;2874:4;2870:12;2901:18;2891:81;;2957:4;2949:6;2945:17;2935:27;;2891:81;3019:2;3011:6;3008:14;2988:18;2985:38;2982:84;;;3038:18;;:::i;:::-;2982:84;2803:269;2752:320;;;:::o",
  "source": "pragma solidity ^0.8.0;\r\n\r\ncontract Accounts {\r\n    // mapping of address => struct\r\n    struct Account {\r\n        string role;\r\n        string companyName;\r\n    }\r\n\r\n    mapping(address => Account) accounts;\r\n\r\n    // when view info about the address, pass the address as parameter\r\n    constructor(address[] memory _addresses) {\r\n        // hardcode\r\n        accounts[_addresses[0]] = Account(\"Driver\", \"Company A\");\r\n        accounts[_addresses[1]] = Account(\"Partner/Investor\", \"Company B\");\r\n        accounts[_addresses[2]] = Account(\"Partner/Investor\", \"Company C\");\r\n        accounts[_addresses[3]] = Account(\"Partner\", \"Company D\");\r\n        accounts[_addresses[4]] = Account(\"Platform User\", \"Valerie\");\r\n        accounts[_addresses[5]] = Account(\"Platform User\", \"Wen Qing\");\r\n    }\r\n\r\n    function viewAccountRole(address _addr)\r\n        public\r\n        view\r\n        returns (string memory)\r\n    {\r\n        return accounts[_addr].role;\r\n    }\r\n\r\n    function viewAccountName(address _addr)\r\n        public\r\n        view\r\n        returns (string memory)\r\n    {\r\n        return accounts[_addr].companyName;\r\n    }\r\n\r\n    function viewTest() public pure returns (string memory) {\r\n        return \"hi\";\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\NTU user\\Desktop\\project\\Blockchain\\CZ4153_DevProj\\contracts\\Accounts.sol",
  "ast": {
    "absolutePath": "project:/contracts/Accounts.sol",
    "exportedSymbols": {
      "Accounts": [
        1102
      ]
    },
    "id": 1103,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 984,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Accounts",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1102,
        "linearizedBaseContracts": [
          1102
        ],
        "name": "Accounts",
        "nameLocation": "36:8:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Accounts.Account",
            "id": 989,
            "members": [
              {
                "constant": false,
                "id": 986,
                "mutability": "mutable",
                "name": "role",
                "nameLocation": "122:4:5",
                "nodeType": "VariableDeclaration",
                "scope": 989,
                "src": "115:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 985,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "115:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 988,
                "mutability": "mutable",
                "name": "companyName",
                "nameLocation": "144:11:5",
                "nodeType": "VariableDeclaration",
                "scope": 989,
                "src": "137:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 987,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "137:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Account",
            "nameLocation": "96:7:5",
            "nodeType": "StructDefinition",
            "scope": 1102,
            "src": "89:74:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 994,
            "mutability": "mutable",
            "name": "accounts",
            "nameLocation": "199:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 1102,
            "src": "171:36:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
              "typeString": "mapping(address => struct Accounts.Account)"
            },
            "typeName": {
              "id": 993,
              "keyType": {
                "id": 990,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "179:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "171:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                "typeString": "mapping(address => struct Accounts.Account)"
              },
              "valueType": {
                "id": 992,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 991,
                  "name": "Account",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 989,
                  "src": "190:7:5"
                },
                "referencedDeclaration": 989,
                "src": "190:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Account_$989_storage_ptr",
                  "typeString": "struct Accounts.Account"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1066,
              "nodeType": "Block",
              "src": "329:463:5",
              "statements": [
                {
                  "expression": {
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1000,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "361:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1004,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 1001,
                          "name": "_addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "370:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1003,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "381:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "370:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "361:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "447269766572",
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "395:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6e220a4fa0e3f250021e6b8eab95f1f1d0a96fa509059fcb55b181b6e26a9010",
                            "typeString": "literal_string \"Driver\""
                          },
                          "value": "Driver"
                        },
                        {
                          "hexValue": "436f6d70616e792041",
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "405:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f5a38abfd9a4b62e6fa74522d11c172a08090bb8b1c0efff69916c16b311d359",
                            "typeString": "literal_string \"Company A\""
                          },
                          "value": "Company A"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6e220a4fa0e3f250021e6b8eab95f1f1d0a96fa509059fcb55b181b6e26a9010",
                            "typeString": "literal_string \"Driver\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f5a38abfd9a4b62e6fa74522d11c172a08090bb8b1c0efff69916c16b311d359",
                            "typeString": "literal_string \"Company A\""
                          }
                        ],
                        "id": 1005,
                        "name": "Account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "387:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Account_$989_storage_ptr_$",
                          "typeString": "type(struct Accounts.Account storage pointer)"
                        }
                      },
                      "id": 1008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "387:30:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_memory_ptr",
                        "typeString": "struct Accounts.Account memory"
                      }
                    },
                    "src": "361:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$989_storage",
                      "typeString": "struct Accounts.Account storage ref"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "361:56:5"
                },
                {
                  "expression": {
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1011,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "428:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1015,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 1012,
                          "name": "_addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "437:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1014,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "448:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "437:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "428:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "506172746e65722f496e766573746f72",
                          "id": 1017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "462:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6004131284a90053d36a06b579996f3a6834215d68725e10acde971e4d46d94d",
                            "typeString": "literal_string \"Partner/Investor\""
                          },
                          "value": "Partner/Investor"
                        },
                        {
                          "hexValue": "436f6d70616e792042",
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "482:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_845f7caca2c9440d23906d499154fc16499e41459f149ebc121cbd2f3ec40215",
                            "typeString": "literal_string \"Company B\""
                          },
                          "value": "Company B"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6004131284a90053d36a06b579996f3a6834215d68725e10acde971e4d46d94d",
                            "typeString": "literal_string \"Partner/Investor\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_845f7caca2c9440d23906d499154fc16499e41459f149ebc121cbd2f3ec40215",
                            "typeString": "literal_string \"Company B\""
                          }
                        ],
                        "id": 1016,
                        "name": "Account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "454:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Account_$989_storage_ptr_$",
                          "typeString": "type(struct Accounts.Account storage pointer)"
                        }
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "454:40:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_memory_ptr",
                        "typeString": "struct Accounts.Account memory"
                      }
                    },
                    "src": "428:66:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$989_storage",
                      "typeString": "struct Accounts.Account storage ref"
                    }
                  },
                  "id": 1021,
                  "nodeType": "ExpressionStatement",
                  "src": "428:66:5"
                },
                {
                  "expression": {
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1022,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "505:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1026,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 1023,
                          "name": "_addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "514:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1025,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "525:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "514:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "505:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "506172746e65722f496e766573746f72",
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "539:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6004131284a90053d36a06b579996f3a6834215d68725e10acde971e4d46d94d",
                            "typeString": "literal_string \"Partner/Investor\""
                          },
                          "value": "Partner/Investor"
                        },
                        {
                          "hexValue": "436f6d70616e792043",
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "559:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_81914d7f29f9eae3ca6a388dbf3a55eae6abbd1017edffdc87b6ca1323755bd1",
                            "typeString": "literal_string \"Company C\""
                          },
                          "value": "Company C"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6004131284a90053d36a06b579996f3a6834215d68725e10acde971e4d46d94d",
                            "typeString": "literal_string \"Partner/Investor\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_81914d7f29f9eae3ca6a388dbf3a55eae6abbd1017edffdc87b6ca1323755bd1",
                            "typeString": "literal_string \"Company C\""
                          }
                        ],
                        "id": 1027,
                        "name": "Account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "531:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Account_$989_storage_ptr_$",
                          "typeString": "type(struct Accounts.Account storage pointer)"
                        }
                      },
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "531:40:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_memory_ptr",
                        "typeString": "struct Accounts.Account memory"
                      }
                    },
                    "src": "505:66:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$989_storage",
                      "typeString": "struct Accounts.Account storage ref"
                    }
                  },
                  "id": 1032,
                  "nodeType": "ExpressionStatement",
                  "src": "505:66:5"
                },
                {
                  "expression": {
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1033,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "582:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1037,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 1034,
                          "name": "_addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "591:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1036,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "602:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "591:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "582:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "506172746e6572",
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "616:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e2fb2c2cc467b1876c7cda95154a33fe1c7c6dd31e5d5577e02a8f9a04d204b6",
                            "typeString": "literal_string \"Partner\""
                          },
                          "value": "Partner"
                        },
                        {
                          "hexValue": "436f6d70616e792044",
                          "id": 1040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "627:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0c90d9cb14bd14529f346b8c666ed5bf2b0e5dc554c75e836474e85f8dd15b60",
                            "typeString": "literal_string \"Company D\""
                          },
                          "value": "Company D"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_e2fb2c2cc467b1876c7cda95154a33fe1c7c6dd31e5d5577e02a8f9a04d204b6",
                            "typeString": "literal_string \"Partner\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_0c90d9cb14bd14529f346b8c666ed5bf2b0e5dc554c75e836474e85f8dd15b60",
                            "typeString": "literal_string \"Company D\""
                          }
                        ],
                        "id": 1038,
                        "name": "Account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "608:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Account_$989_storage_ptr_$",
                          "typeString": "type(struct Accounts.Account storage pointer)"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "608:31:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_memory_ptr",
                        "typeString": "struct Accounts.Account memory"
                      }
                    },
                    "src": "582:57:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$989_storage",
                      "typeString": "struct Accounts.Account storage ref"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "582:57:5"
                },
                {
                  "expression": {
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1044,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "650:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1048,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 1045,
                          "name": "_addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "659:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1047,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "670:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "659:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "650:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "506c6174666f726d2055736572",
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "684:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_42c92eff8449fe446b7168f41ea5ba270dd279070da6956feafb8b5d866bd033",
                            "typeString": "literal_string \"Platform User\""
                          },
                          "value": "Platform User"
                        },
                        {
                          "hexValue": "56616c65726965",
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "701:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_87e97399294933ddac2856777b17cc08e34a269071f23797ecdd4b4bf3dc3bf1",
                            "typeString": "literal_string \"Valerie\""
                          },
                          "value": "Valerie"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_42c92eff8449fe446b7168f41ea5ba270dd279070da6956feafb8b5d866bd033",
                            "typeString": "literal_string \"Platform User\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_87e97399294933ddac2856777b17cc08e34a269071f23797ecdd4b4bf3dc3bf1",
                            "typeString": "literal_string \"Valerie\""
                          }
                        ],
                        "id": 1049,
                        "name": "Account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "676:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Account_$989_storage_ptr_$",
                          "typeString": "type(struct Accounts.Account storage pointer)"
                        }
                      },
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "676:35:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_memory_ptr",
                        "typeString": "struct Accounts.Account memory"
                      }
                    },
                    "src": "650:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$989_storage",
                      "typeString": "struct Accounts.Account storage ref"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "650:61:5"
                },
                {
                  "expression": {
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1055,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "722:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1059,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 1056,
                          "name": "_addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "731:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1058,
                        "indexExpression": {
                          "hexValue": "35",
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "742:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "731:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "722:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "506c6174666f726d2055736572",
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "756:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_42c92eff8449fe446b7168f41ea5ba270dd279070da6956feafb8b5d866bd033",
                            "typeString": "literal_string \"Platform User\""
                          },
                          "value": "Platform User"
                        },
                        {
                          "hexValue": "57656e2051696e67",
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "773:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fc27061aba430544c23c3ac95cf649b7e1ccb712b3d38924aa146c4ffa0af980",
                            "typeString": "literal_string \"Wen Qing\""
                          },
                          "value": "Wen Qing"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_42c92eff8449fe446b7168f41ea5ba270dd279070da6956feafb8b5d866bd033",
                            "typeString": "literal_string \"Platform User\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_fc27061aba430544c23c3ac95cf649b7e1ccb712b3d38924aa146c4ffa0af980",
                            "typeString": "literal_string \"Wen Qing\""
                          }
                        ],
                        "id": 1060,
                        "name": "Account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "748:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Account_$989_storage_ptr_$",
                          "typeString": "type(struct Accounts.Account storage pointer)"
                        }
                      },
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "748:36:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_memory_ptr",
                        "typeString": "struct Accounts.Account memory"
                      }
                    },
                    "src": "722:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$989_storage",
                      "typeString": "struct Accounts.Account storage ref"
                    }
                  },
                  "id": 1065,
                  "nodeType": "ExpressionStatement",
                  "src": "722:62:5"
                }
              ]
            },
            "id": 1067,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "_addresses",
                  "nameLocation": "317:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1067,
                  "src": "300:27:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 995,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "300:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 996,
                    "nodeType": "ArrayTypeName",
                    "src": "300:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "299:29:5"
            },
            "returnParameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "329:0:5"
            },
            "scope": 1102,
            "src": "288:504:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1079,
              "nodeType": "Block",
              "src": "908:46:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1074,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "926:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1076,
                      "indexExpression": {
                        "id": 1075,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "935:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "926:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "role",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 986,
                    "src": "926:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1073,
                  "id": 1078,
                  "nodeType": "Return",
                  "src": "919:27:5"
                }
              ]
            },
            "functionSelector": "6c9e7c43",
            "id": 1080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewAccountRole",
            "nameLocation": "809:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "833:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "825:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "824:15:5"
            },
            "returnParameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "888:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "887:15:5"
            },
            "scope": 1102,
            "src": "800:154:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1092,
              "nodeType": "Block",
              "src": "1070:53:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1087,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "1088:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1089,
                      "indexExpression": {
                        "id": 1088,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1082,
                        "src": "1097:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1088:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "companyName",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 988,
                    "src": "1088:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1086,
                  "id": 1091,
                  "nodeType": "Return",
                  "src": "1081:34:5"
                }
              ]
            },
            "functionSelector": "0109b8c6",
            "id": 1093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewAccountName",
            "nameLocation": "971:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1082,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "995:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "987:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "986:15:5"
            },
            "returnParameters": {
              "id": 1086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "1050:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1049:15:5"
            },
            "scope": 1102,
            "src": "962:161:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1100,
              "nodeType": "Block",
              "src": "1187:30:5",
              "statements": [
                {
                  "expression": {
                    "hexValue": "6869",
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1205:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7624778dedc75f8b322b9fa1632a610d40b85e106c7d9bf0e743a9ce291b9c6f",
                      "typeString": "literal_string \"hi\""
                    },
                    "value": "hi"
                  },
                  "functionReturnParameters": 1097,
                  "id": 1099,
                  "nodeType": "Return",
                  "src": "1198:11:5"
                }
              ]
            },
            "functionSelector": "5e2131b0",
            "id": 1101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewTest",
            "nameLocation": "1140:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1148:2:5"
            },
            "returnParameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1096,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1101,
                  "src": "1172:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1095,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1172:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1171:15:5"
            },
            "scope": 1102,
            "src": "1131:86:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1103,
        "src": "27:1193:5",
        "usedErrors": []
      }
    ],
    "src": "0:1222:5"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Accounts.sol",
    "exportedSymbols": {
      "Accounts": [
        1102
      ]
    },
    "id": 1103,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 984,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Accounts",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1102,
        "linearizedBaseContracts": [
          1102
        ],
        "name": "Accounts",
        "nameLocation": "36:8:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Accounts.Account",
            "id": 989,
            "members": [
              {
                "constant": false,
                "id": 986,
                "mutability": "mutable",
                "name": "role",
                "nameLocation": "122:4:5",
                "nodeType": "VariableDeclaration",
                "scope": 989,
                "src": "115:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 985,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "115:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 988,
                "mutability": "mutable",
                "name": "companyName",
                "nameLocation": "144:11:5",
                "nodeType": "VariableDeclaration",
                "scope": 989,
                "src": "137:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 987,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "137:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Account",
            "nameLocation": "96:7:5",
            "nodeType": "StructDefinition",
            "scope": 1102,
            "src": "89:74:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 994,
            "mutability": "mutable",
            "name": "accounts",
            "nameLocation": "199:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 1102,
            "src": "171:36:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
              "typeString": "mapping(address => struct Accounts.Account)"
            },
            "typeName": {
              "id": 993,
              "keyType": {
                "id": 990,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "179:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "171:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                "typeString": "mapping(address => struct Accounts.Account)"
              },
              "valueType": {
                "id": 992,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 991,
                  "name": "Account",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 989,
                  "src": "190:7:5"
                },
                "referencedDeclaration": 989,
                "src": "190:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Account_$989_storage_ptr",
                  "typeString": "struct Accounts.Account"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1066,
              "nodeType": "Block",
              "src": "329:463:5",
              "statements": [
                {
                  "expression": {
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1000,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "361:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1004,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 1001,
                          "name": "_addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "370:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1003,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "381:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "370:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "361:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "447269766572",
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "395:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6e220a4fa0e3f250021e6b8eab95f1f1d0a96fa509059fcb55b181b6e26a9010",
                            "typeString": "literal_string \"Driver\""
                          },
                          "value": "Driver"
                        },
                        {
                          "hexValue": "436f6d70616e792041",
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "405:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f5a38abfd9a4b62e6fa74522d11c172a08090bb8b1c0efff69916c16b311d359",
                            "typeString": "literal_string \"Company A\""
                          },
                          "value": "Company A"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6e220a4fa0e3f250021e6b8eab95f1f1d0a96fa509059fcb55b181b6e26a9010",
                            "typeString": "literal_string \"Driver\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f5a38abfd9a4b62e6fa74522d11c172a08090bb8b1c0efff69916c16b311d359",
                            "typeString": "literal_string \"Company A\""
                          }
                        ],
                        "id": 1005,
                        "name": "Account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "387:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Account_$989_storage_ptr_$",
                          "typeString": "type(struct Accounts.Account storage pointer)"
                        }
                      },
                      "id": 1008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "387:30:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_memory_ptr",
                        "typeString": "struct Accounts.Account memory"
                      }
                    },
                    "src": "361:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$989_storage",
                      "typeString": "struct Accounts.Account storage ref"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "361:56:5"
                },
                {
                  "expression": {
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1011,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "428:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1015,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 1012,
                          "name": "_addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "437:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1014,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "448:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "437:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "428:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "506172746e65722f496e766573746f72",
                          "id": 1017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "462:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6004131284a90053d36a06b579996f3a6834215d68725e10acde971e4d46d94d",
                            "typeString": "literal_string \"Partner/Investor\""
                          },
                          "value": "Partner/Investor"
                        },
                        {
                          "hexValue": "436f6d70616e792042",
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "482:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_845f7caca2c9440d23906d499154fc16499e41459f149ebc121cbd2f3ec40215",
                            "typeString": "literal_string \"Company B\""
                          },
                          "value": "Company B"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6004131284a90053d36a06b579996f3a6834215d68725e10acde971e4d46d94d",
                            "typeString": "literal_string \"Partner/Investor\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_845f7caca2c9440d23906d499154fc16499e41459f149ebc121cbd2f3ec40215",
                            "typeString": "literal_string \"Company B\""
                          }
                        ],
                        "id": 1016,
                        "name": "Account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "454:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Account_$989_storage_ptr_$",
                          "typeString": "type(struct Accounts.Account storage pointer)"
                        }
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "454:40:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_memory_ptr",
                        "typeString": "struct Accounts.Account memory"
                      }
                    },
                    "src": "428:66:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$989_storage",
                      "typeString": "struct Accounts.Account storage ref"
                    }
                  },
                  "id": 1021,
                  "nodeType": "ExpressionStatement",
                  "src": "428:66:5"
                },
                {
                  "expression": {
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1022,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "505:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1026,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 1023,
                          "name": "_addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "514:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1025,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "525:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "514:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "505:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "506172746e65722f496e766573746f72",
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "539:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6004131284a90053d36a06b579996f3a6834215d68725e10acde971e4d46d94d",
                            "typeString": "literal_string \"Partner/Investor\""
                          },
                          "value": "Partner/Investor"
                        },
                        {
                          "hexValue": "436f6d70616e792043",
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "559:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_81914d7f29f9eae3ca6a388dbf3a55eae6abbd1017edffdc87b6ca1323755bd1",
                            "typeString": "literal_string \"Company C\""
                          },
                          "value": "Company C"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6004131284a90053d36a06b579996f3a6834215d68725e10acde971e4d46d94d",
                            "typeString": "literal_string \"Partner/Investor\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_81914d7f29f9eae3ca6a388dbf3a55eae6abbd1017edffdc87b6ca1323755bd1",
                            "typeString": "literal_string \"Company C\""
                          }
                        ],
                        "id": 1027,
                        "name": "Account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "531:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Account_$989_storage_ptr_$",
                          "typeString": "type(struct Accounts.Account storage pointer)"
                        }
                      },
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "531:40:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_memory_ptr",
                        "typeString": "struct Accounts.Account memory"
                      }
                    },
                    "src": "505:66:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$989_storage",
                      "typeString": "struct Accounts.Account storage ref"
                    }
                  },
                  "id": 1032,
                  "nodeType": "ExpressionStatement",
                  "src": "505:66:5"
                },
                {
                  "expression": {
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1033,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "582:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1037,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 1034,
                          "name": "_addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "591:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1036,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "602:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "591:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "582:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "506172746e6572",
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "616:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e2fb2c2cc467b1876c7cda95154a33fe1c7c6dd31e5d5577e02a8f9a04d204b6",
                            "typeString": "literal_string \"Partner\""
                          },
                          "value": "Partner"
                        },
                        {
                          "hexValue": "436f6d70616e792044",
                          "id": 1040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "627:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0c90d9cb14bd14529f346b8c666ed5bf2b0e5dc554c75e836474e85f8dd15b60",
                            "typeString": "literal_string \"Company D\""
                          },
                          "value": "Company D"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_e2fb2c2cc467b1876c7cda95154a33fe1c7c6dd31e5d5577e02a8f9a04d204b6",
                            "typeString": "literal_string \"Partner\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_0c90d9cb14bd14529f346b8c666ed5bf2b0e5dc554c75e836474e85f8dd15b60",
                            "typeString": "literal_string \"Company D\""
                          }
                        ],
                        "id": 1038,
                        "name": "Account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "608:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Account_$989_storage_ptr_$",
                          "typeString": "type(struct Accounts.Account storage pointer)"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "608:31:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_memory_ptr",
                        "typeString": "struct Accounts.Account memory"
                      }
                    },
                    "src": "582:57:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$989_storage",
                      "typeString": "struct Accounts.Account storage ref"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "582:57:5"
                },
                {
                  "expression": {
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1044,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "650:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1048,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 1045,
                          "name": "_addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "659:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1047,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "670:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "659:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "650:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "506c6174666f726d2055736572",
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "684:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_42c92eff8449fe446b7168f41ea5ba270dd279070da6956feafb8b5d866bd033",
                            "typeString": "literal_string \"Platform User\""
                          },
                          "value": "Platform User"
                        },
                        {
                          "hexValue": "56616c65726965",
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "701:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_87e97399294933ddac2856777b17cc08e34a269071f23797ecdd4b4bf3dc3bf1",
                            "typeString": "literal_string \"Valerie\""
                          },
                          "value": "Valerie"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_42c92eff8449fe446b7168f41ea5ba270dd279070da6956feafb8b5d866bd033",
                            "typeString": "literal_string \"Platform User\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_87e97399294933ddac2856777b17cc08e34a269071f23797ecdd4b4bf3dc3bf1",
                            "typeString": "literal_string \"Valerie\""
                          }
                        ],
                        "id": 1049,
                        "name": "Account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "676:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Account_$989_storage_ptr_$",
                          "typeString": "type(struct Accounts.Account storage pointer)"
                        }
                      },
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "676:35:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_memory_ptr",
                        "typeString": "struct Accounts.Account memory"
                      }
                    },
                    "src": "650:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$989_storage",
                      "typeString": "struct Accounts.Account storage ref"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "650:61:5"
                },
                {
                  "expression": {
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1055,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "722:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1059,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 1056,
                          "name": "_addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "731:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1058,
                        "indexExpression": {
                          "hexValue": "35",
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "742:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "731:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "722:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "506c6174666f726d2055736572",
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "756:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_42c92eff8449fe446b7168f41ea5ba270dd279070da6956feafb8b5d866bd033",
                            "typeString": "literal_string \"Platform User\""
                          },
                          "value": "Platform User"
                        },
                        {
                          "hexValue": "57656e2051696e67",
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "773:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fc27061aba430544c23c3ac95cf649b7e1ccb712b3d38924aa146c4ffa0af980",
                            "typeString": "literal_string \"Wen Qing\""
                          },
                          "value": "Wen Qing"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_42c92eff8449fe446b7168f41ea5ba270dd279070da6956feafb8b5d866bd033",
                            "typeString": "literal_string \"Platform User\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_fc27061aba430544c23c3ac95cf649b7e1ccb712b3d38924aa146c4ffa0af980",
                            "typeString": "literal_string \"Wen Qing\""
                          }
                        ],
                        "id": 1060,
                        "name": "Account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "748:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Account_$989_storage_ptr_$",
                          "typeString": "type(struct Accounts.Account storage pointer)"
                        }
                      },
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "748:36:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_memory_ptr",
                        "typeString": "struct Accounts.Account memory"
                      }
                    },
                    "src": "722:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$989_storage",
                      "typeString": "struct Accounts.Account storage ref"
                    }
                  },
                  "id": 1065,
                  "nodeType": "ExpressionStatement",
                  "src": "722:62:5"
                }
              ]
            },
            "id": 1067,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "_addresses",
                  "nameLocation": "317:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1067,
                  "src": "300:27:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 995,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "300:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 996,
                    "nodeType": "ArrayTypeName",
                    "src": "300:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "299:29:5"
            },
            "returnParameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "329:0:5"
            },
            "scope": 1102,
            "src": "288:504:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1079,
              "nodeType": "Block",
              "src": "908:46:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1074,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "926:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1076,
                      "indexExpression": {
                        "id": 1075,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "935:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "926:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "role",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 986,
                    "src": "926:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1073,
                  "id": 1078,
                  "nodeType": "Return",
                  "src": "919:27:5"
                }
              ]
            },
            "functionSelector": "6c9e7c43",
            "id": 1080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewAccountRole",
            "nameLocation": "809:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "833:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "825:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "824:15:5"
            },
            "returnParameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "888:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "887:15:5"
            },
            "scope": 1102,
            "src": "800:154:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1092,
              "nodeType": "Block",
              "src": "1070:53:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1087,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "1088:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$989_storage_$",
                          "typeString": "mapping(address => struct Accounts.Account storage ref)"
                        }
                      },
                      "id": 1089,
                      "indexExpression": {
                        "id": 1088,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1082,
                        "src": "1097:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1088:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Account_$989_storage",
                        "typeString": "struct Accounts.Account storage ref"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "companyName",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 988,
                    "src": "1088:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1086,
                  "id": 1091,
                  "nodeType": "Return",
                  "src": "1081:34:5"
                }
              ]
            },
            "functionSelector": "0109b8c6",
            "id": 1093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewAccountName",
            "nameLocation": "971:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1082,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "995:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "987:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "986:15:5"
            },
            "returnParameters": {
              "id": 1086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "1050:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1049:15:5"
            },
            "scope": 1102,
            "src": "962:161:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1100,
              "nodeType": "Block",
              "src": "1187:30:5",
              "statements": [
                {
                  "expression": {
                    "hexValue": "6869",
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1205:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7624778dedc75f8b322b9fa1632a610d40b85e106c7d9bf0e743a9ce291b9c6f",
                      "typeString": "literal_string \"hi\""
                    },
                    "value": "hi"
                  },
                  "functionReturnParameters": 1097,
                  "id": 1099,
                  "nodeType": "Return",
                  "src": "1198:11:5"
                }
              ]
            },
            "functionSelector": "5e2131b0",
            "id": 1101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewTest",
            "nameLocation": "1140:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1148:2:5"
            },
            "returnParameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1096,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1101,
                  "src": "1172:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1095,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1172:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1171:15:5"
            },
            "scope": 1102,
            "src": "1131:86:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1103,
        "src": "27:1193:5",
        "usedErrors": []
      }
    ],
    "src": "0:1222:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x921b64854bDc56160aBAd37A839E59ff0C3A4c45",
      "transactionHash": "0xaf78916f4d08bdf61b9115a689df61cfef0b2cc2e66019249cef8ae63f2add5a"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-28T10:03:35.343Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}